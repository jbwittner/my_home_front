name: Pull Request CI
on:
  pull_request:
    branches:
      - develop
env:
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  CI: true
jobs:
  Clean install:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v3
        with:
          node-version: '16.15.1'
          registry-url: 'https://npm.pkg.github.com'
          cache: 'npm'
      - name: Clean install
        run: npm ci
  Check eslint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v3
        with:
          node-version: '16.15.1'
          registry-url: 'https://npm.pkg.github.com'
          cache: 'npm'
      - name: Check eslint
        run: npm run eslint
  Build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v3
        with:
          node-version: '16.15.1'
          registry-url: 'https://npm.pkg.github.com'
          cache: 'npm'
      - name: Build
        run: npm run build
  Test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v3
        with:
          node-version: '16.15.1'
          registry-url: 'https://npm.pkg.github.com'
          cache: 'npm'
      - name: Test
        run: npm run test
  Sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.NPM_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}